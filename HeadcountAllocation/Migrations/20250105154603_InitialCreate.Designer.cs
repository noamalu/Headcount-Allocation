// <auto-generated />
using System;
using HeadcountAllocation.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HeadcountAllocation.Migrations
{
    [DbContext(typeof(DBcontext))]
    [Migration("20250105154603_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HeadcountAllocation.DAL.DTO.EmployeeDTO", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("JobPercentage")
                        .HasColumnType("float");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeZone")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearExp")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("HeadcountAllocation.DAL.DTO.EmployeeLanguagesDTO", b =>
                {
                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.HasKey("LanguageID");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeLanguages");
                });

            modelBuilder.Entity("HeadcountAllocation.DAL.DTO.EmployeeSkillsDTO", b =>
                {
                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("SkillTypeId")
                        .HasColumnType("int");

                    b.HasKey("SkillId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeSkills");
                });

            modelBuilder.Entity("HeadcountAllocation.DAL.DTO.ProjectDTO", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredHours")
                        .HasColumnType("int");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("HeadcountAllocation.DAL.DTO.RoleDTO", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double>("JobPercentage")
                        .HasColumnType("float");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("TimeZoneId")
                        .HasColumnType("int");

                    b.Property<int>("YearsExperience")
                        .HasColumnType("int");

                    b.HasKey("RoleId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HeadcountAllocation.DAL.DTO.RoleLanguagesDTO", b =>
                {
                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.Property<int>("LanguageTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("LanguageID");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleLanguages");
                });

            modelBuilder.Entity("HeadcountAllocation.DAL.DTO.RoleSkillsDTO", b =>
                {
                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("SkillTypeId")
                        .HasColumnType("int");

                    b.HasKey("SkillId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleSkills");
                });

            modelBuilder.Entity("HeadcountAllocation.DAL.DTO.EmployeeLanguagesDTO", b =>
                {
                    b.HasOne("HeadcountAllocation.DAL.DTO.EmployeeDTO", null)
                        .WithMany("ForeignLanguages")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeadcountAllocation.DAL.DTO.EmployeeSkillsDTO", b =>
                {
                    b.HasOne("HeadcountAllocation.DAL.DTO.EmployeeDTO", null)
                        .WithMany("Skills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeadcountAllocation.DAL.DTO.RoleDTO", b =>
                {
                    b.HasOne("HeadcountAllocation.DAL.DTO.EmployeeDTO", null)
                        .WithMany("Roles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HeadcountAllocation.DAL.DTO.ProjectDTO", null)
                        .WithMany("Roles")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeadcountAllocation.DAL.DTO.RoleLanguagesDTO", b =>
                {
                    b.HasOne("HeadcountAllocation.DAL.DTO.RoleDTO", null)
                        .WithMany("ForeignLanguages")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeadcountAllocation.DAL.DTO.RoleSkillsDTO", b =>
                {
                    b.HasOne("HeadcountAllocation.DAL.DTO.RoleDTO", null)
                        .WithMany("Skills")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeadcountAllocation.DAL.DTO.EmployeeDTO", b =>
                {
                    b.Navigation("ForeignLanguages");

                    b.Navigation("Roles");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("HeadcountAllocation.DAL.DTO.ProjectDTO", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("HeadcountAllocation.DAL.DTO.RoleDTO", b =>
                {
                    b.Navigation("ForeignLanguages");

                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
